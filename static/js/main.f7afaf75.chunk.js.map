{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","forChange","isValidLink","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","isErrorValidLink","isErrorVisible","htmlFor","type","classNames","onChange","onBlur","pattern","NewMovie","onAdd","count","setCount","newMovie","setNewMovie","setHasError","link","test","fullFields","trim","reset","handleChange","e","target","prevMovie","onSubmit","event","preventDefault","onReset","disabled","App","moviesFromServer","setMovies","currentMowies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7afaf75.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  forChange?: (event: React.ChangeEvent<HTMLInputElement>) => void\n  isValidLink?: (link: string) => boolean,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  forChange = () => {},\n  isValidLink = () => true,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setTouched] = useState(false);\n\n  const hasError = touched && required && !value;\n\n  const isErrorValidLink = touched && !isValidLink(value);\n\n  const isErrorVisible = isErrorValidLink && !hasError;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          name={name}\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError || isErrorValidLink,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={forChange}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {isErrorVisible && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { Movie } from '../../types/Movie';\nimport { TextField } from '../TextField';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\n/* eslint-disable */\n\nconst pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n/* eslint-enable */\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n\n  const [newMovie, setNewMovie] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  const [hasError, setHasError] = useState(false);\n\n  const isValidLink = (link: string) => (pattern.test(link));\n\n  const fullFields = newMovie.title.trim()\n  && newMovie.imgUrl.trim()\n  && newMovie.imdbUrl.trim()\n  && newMovie.imdbId.trim()\n  && isValidLink(newMovie.imgUrl)\n  && isValidLink(newMovie.imdbUrl);\n\n  const reset = () => {\n    setNewMovie({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n\n    setHasError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    onAdd(newMovie);\n\n    setCount(count + 1);\n\n    reset();\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    setNewMovie((prevMovie) => ({ ...prevMovie, [name]: value }));\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n      onReset={reset}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={newMovie.title}\n        forChange={handleChange}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={newMovie.description}\n        forChange={handleChange}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={newMovie.imgUrl}\n        forChange={handleChange}\n        required\n        isValidLink={isValidLink}\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={newMovie.imdbUrl}\n        forChange={handleChange}\n        required\n        isValidLink={isValidLink}\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={newMovie.imdbId}\n        forChange={handleChange}\n        required\n      />\n\n      <div className={classNames('field', {\n        'is-grouped': fullFields && !hasError,\n      })}\n      >\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={!fullFields}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>(moviesFromServer);\n\n  const addNewMovie = (newMovie: Movie) => {\n    setMovies(currentMowies => [...currentMowies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addNewMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}